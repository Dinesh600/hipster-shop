name: Deploy to GKE
on: pull_request

env:
  GCP_REGION: us-central1
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  DEFAULT_IMAGE_REPO: gcr.io/${{ secrets.GCP_PROJECT_ID }}
  GCP_K8S_CLUSTER: gke-hipster-shop

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - uses: azure/setup-kubectl@v1
        id: install

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Get gcloud cluster credentials
        run: |
          gcloud config set compute/region ${{ env.GCP_REGION }}
          gcloud container clusters get-credentials ${{ env.GCP_K8S_CLUSTER }}
          gcloud auth configure-docker

      - name: Get k8s Context
        run: |
          kubectl config get-contexts
          kubectl create secret generic lightstep-credentials --from-literal=accessToken=${{ secrets.LIGHTSTEP_ACCESS_TOKEN }} || echo "Secret already present, not updated."

      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ secrets.GITHUB_PAT }}
          environment: production
          ref: ${{ github.ref }}

      - name: Run Skaffold
        uses: hiberbee/github-action-skaffold@latest
        with:
          command: run
          profile: gcb
          default-repo: ${{ env.DEFAULT_IMAGE_REPO }}

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_PAT }}
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_PAT }}
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}